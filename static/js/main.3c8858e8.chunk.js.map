{"version":3,"sources":["components/header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transactions.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["header","_jsx","children","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","_ref","dispatch","useReducer","AppReducer","Provider","value","deleteTransaction","addTransaction","Balance","useContext","total","map","amount","reduce","acc","item","toFixed","_jsxs","IncomeExpenses","amounts","income","expense","className","Transactions","sign","text","Math","abs","onClick","TransactionList","index","AddTransaction","setText","useState","setAmount","isSubmitDisabled","isEmpty","_Fragment","onSubmit","e","preventDefault","newTransaction","floor","random","parseInt","htmlFor","autoFocus","autoComplete","placeholder","onChange","target","disabled","App","Header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c8858e8.chunk.js","sourcesContent":["import React from 'react';\nfunction header() {\n    return (\n        <h2> Expense Tracker </h2>\n    )   \n}\n\nexport default header\n","export default (state, action) => {\n    switch (action.type) {\n        case 'DELETE_TRANSACTION':\n            return {\n                ...state,\n                transactions: state.transactions.filter((transaction) => transaction.id !== action.payload)\n            };\n\n        case 'ADD_TRANSACTION':\n            return {\n                ...state,\n                transactions: [action.payload, ...state.transactions]\n            };\n\n        default:\n            return state;\n    }\n}","import React, {createContext, useReducer} from 'react'\nimport AppReducer from './AppReducer';\n\n// Initial State\nconst initialState  = {\n    transactions: []\n}\n\n\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n\n// Create a provider \nexport const GlobalProvider = ({children}) => {\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    // Action. Not returning the action, directly dispatching the action inside the function\n    function deleteTransaction(id) {\n        dispatch({\n            type: 'DELETE_TRANSACTION',\n            payload:id\n        })\n    }\n\n    function addTransaction(transaction) {\n        dispatch({\n            type: 'ADD_TRANSACTION',\n            payload:transaction\n        })\n    }\n\n    return (<GlobalContext.Provider value = {{\n        transactions: state.transactions,\n        deleteTransaction,\n        addTransaction\n    }}>\n        {children}\n    </GlobalContext.Provider>)\n}","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\n\n  return (\n    <div>\n      <h4> Your Balance </h4>\n      <h1 id=\"balance\"> ₹{total}</h1>\n    </div>\n  );\n}\n\nexport default Balance;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction IncomeExpenses() {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((transaction) => transaction > 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  const expense = amounts\n    .filter((transaction) => transaction < 0)\n    .reduce((acc, item) => (acc += item), 0)\n    .toFixed(2);\n\n  // This way it'll make an array of object where transaction amount is < 0. Use console.log to check\n  // const expense = transactions\n  // .filter((transaction) => transaction.amount < 0)\n  // .reduce((acc, item) => (acc += item), 0)\n  // .toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          +₹{income}\n        </p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          -₹{expense}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default IncomeExpenses;\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction Transactions({ transaction }) {\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\n  const { deleteTransaction } = useContext(GlobalContext);\n  return (\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\n      {transaction.text}{\" \"}\n      <span>\n        {sign}₹{Math.abs(transaction.amount)}\n      </span>\n      <button\n        onClick={() => deleteTransaction(transaction.id)}\n        className=\"delete-btn\"\n      >\n        x\n      </button>\n    </li>\n  );\n}\n\nexport default Transactions;\n","import React, {useContext} from \"react\";\nimport {GlobalContext} from '../context/GlobalState'\nimport Transactions from './Transactions';\n\n// we can pull out from our globalcontext using the useContext hook\n\n\nfunction TransactionList() {\n    // const context = useContext(GlobalContext);\n    // console.log(context);\n\n    const {transactions} = useContext(GlobalContext);\n    // the context.transactions or after destructuring {transactions} from context, we have the transactions array\n    // which we need to loop through\n\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n          {transactions.map((transaction, index) => (<Transactions key = {transaction.id} transaction = {transaction} />))}\n        \n      </ul>\n    </div>\n  );\n}\n\nexport default TransactionList;\n","import { isEmpty } from \"lodash\";\nimport React, { useState, useContext } from \"react\";\n\nimport { GlobalContext } from \"../context/GlobalState\";\n\nfunction AddTransaction() {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState();\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 100000000),\n      text,\n      amount: parseInt(amount),\n    };\n    addTransaction(newTransaction);\n    setText(\"\");\n    setAmount(\"\");\n  };\n\n  const isSubmitDisabled = isEmpty(text) && isEmpty(amount);\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Enter expense details</label>\n          <input\n            type=\"text\"\n            autoFocus\n            autoComplete=\"off\"\n            id=\"text\"\n            placeholder=\"Enter description\"\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            placeholder=\"Enter amount\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <button disabled={isSubmitDisabled} className=\"btn\">\n          Add transaction\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default AddTransaction;\n","import './App.css';\nimport Header from './components/header';\nimport Balance from './components/Balance';\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList';\nimport AddTransaction from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header/>\n      <div className = \"container\"> \n        <Balance/>\n        <IncomeExpenses/>\n        <TransactionList/>\n        <AddTransaction/>\n      </div>\n      {/* <div className = \"container\"> \n        <IncomeExpenses/>\n        \n      </div> */}\n      \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}